内核初始化
==============

从引导程序跳转到操作系统内核后，需要对内核进行初始化。对部分硬件进行驱动初始化，才能使操作系统正常运作。其中需要进行初始化的主要有：显存、中断处理程序，时钟处理，键盘处理，硬盘驱动等。
随后，内核设置进程调度程序，配置高速缓存，初始化第一个进程，开中断等等。

4.1 清屏

在进入系统之前，屏幕上可能还残留 BIOS 或者引导器中留下的信息。在进入操作系统之前，需要进行一次清屏操作。
在汇编中使用 10h 中断可以进行清屏操作。相关参数如下表：
AH 为 06 时，向上滚动
AH 为 07 时，向下滚动
AL 表示需要滚动多少行
BH 空白区域的属性
CH 表示区域左上角的 Y 坐标
CL 表示区域左上角的 X 坐标
DH 表示区域右下角的 Y 坐标
DL 表示区域右下角的 X 坐标

Constance 中清屏相关例程如下：
  mov ax, 0x0600
  mov bx, 0x0700
  mov cx, 0
  mov dx, 0x0184
  ret

4.2 重置 GDT
上文提及的 GDT，即 Global Descriptor Table，全局描述符表，在操作系统中的作用是用来限制内存中不同部分的访问权限。在 Constance 中，设置 GDT 是用来区分内核态和用户态空间的权限。
每一个 GDT 实体规定一个范围内存的访问权限。访问权限可以分成 4 个级别，分别为 RING0、RING1、RING2、RING3。在 Constance 中，RING0 为系统内核权限，RING3 为用户权限。
一个 GDT 实体包含以下内容：
1、内存起始地址
2、内存长度限制
3、描述符属性，包括段是否有效、权限级、描述符类型、操作数长度属性等。
GDT 第一项 GDT 实体必须为空描述符，即所有值都为 0。
Constace 中共设置 4 个 GDT 实体，分别为 RING0 权限级别下的代码空间和数据空间以及 RING3 权限级下的代码空间和数据空间。

4.3 中断处理
    4.3.1 IDT
    4.3.2 ISR
    4.3.3 IRQ
4.4 内存管理

4.5 PIT

4.6 进程调度

4.7 键盘

4.8 屏幕初始化

4.9 硬盘驱动初始化

4.10 高速缓存

4.11 init0

4.12 开中断

4.13 初始化 init1

