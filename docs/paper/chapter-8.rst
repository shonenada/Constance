文件系统
===================

操作系统对硬盘数据的操作单位是数据块，为了更好地管理硬盘数据，操作系统一般都需要实现文件系统。文件系统是一种存储和组织数据的方法，它使得操作系统对数据的存取和查询变得更加方便。
文件系统通过“文件”和“目录”的抽象概念来替代硬盘设备上的“数据块”概念，使用用户能够更直接地访问硬盘数据。

8.1 Buffer

操作系统访问硬盘的速度要远比访问内存的速度慢。为了提高文件系统的性能，Constance 中实现了块缓存机制，通过使用一个固定长度的缓存区数组来实现。数组元素是缓存区，包含了计数器、标志位等信息。同时，每一个缓存区应对存储了硬盘中的一个数据块。缓存数组被组织成为一个双向链表，并按照使用时间的先后顺序排列。

由于 Buffer 的存在，当文件系统需要硬盘中某一个数据块的时候，文件系统并不会直接到硬盘上取出，而是向缓存机制申请。文件系统向缓存机制提供设备号 dev 和块号 sector，缓存机制首先会在已缓存的块中查询是否存在这个数据块，若存在则把缓存区计数器加 1 再返回数据块；若不存在，再从硬盘中缓存到缓存区中，返回给文件系统。

当缓存机制发现某个缓存块已被修改，它也会在适当的时候将数据写回硬盘数据块中。在以下两种条件下，缓存块会被写回硬盘：
1、缓存块被换出
2、执行硬盘同步系统调用

由于内存存在时间局部性和空间局部性，缓存链表也按照 LRU 原则进行排序。

8.2 文件系统布局

Constance 中的文件系统采用了 minix 文件系统布局，结构如下：

1、引导块。位于设备的第一个块上，保存 bootloader。
2、超级块。位于设备第二个块上，保存了文件系统的关键参数，当系统启动时，超级块的内容会自动被载入到内存中。
3、inode 位图。位于设备第三个块上。每一位对应硬盘上一个 inode，记录 inode 相关的信息。
4、zone 位图。位于设备第四个块上。同 inode 位图，每一位应对一个 zone，记录其相关信息。一个 zone，可能是一个数据块，也可能是 2、4、8 个物理块的大小。
5、inode 数据。存放文件系统中所有 inode 信息。
6、空闲数据区域。实际存放用户数据的数据区域。

8.4 inode

在 Linux 系统中，每个文件或目录都有一个 inode。inode 中存放着对应文件的相关信息，例如文件的宿主 id，所属组 id，文件长度，访问长度，以及文件数据块在设备上的位置等信息。
整个结构共 32 个字节，结构如下：

struct inode {
    ushort mode;    // 文件类型和文件属性
    ushort uid;    // 文件宿主 id
    uint size;    // 文件长度
    uint time;    // 文件修改时间
    uchar gid;    // 组 id
    uchar nlinks;    // 链接数，表示有多少个文件目录指向该 inode
    ushort zone[9];    // 文件占用盘上的逻辑块号。
};

其中需要注意的是，zone 字段，前 7 个元素表示的是直接块号，而 zone[7] 表示一次间接块号，zone[8] 表示二次间接块号。因此若文件小于 7KB，则根据 inode 的 zone[0] ~ zone[6] 可以很快查到文件所使用了的磁盘块。很显然地如果按照前 7 个 zone 的方式，那么一个 inode （对应一个文件）只能查找到 9KB 的盘块，也意味着一个文件最多只能 9KB。为了解决这个问题，可以使用间接方式来表示盘块，zone[7] 使用一次间接，zone[8] 使用二次间接。所谓间接，使用另外一个块来存放盘块号，zone[7] 指向这个盘块号，而一个盘块一共可以存储 512 个盘块号。

8.5 目录和路径

文件系统中，另一个重要的部分就是目录管理和路径名管理。系统调用中，对文件的的操作虽然都以文件的路径名作为参数，但实际需要的是这个文件对应的 inode。因此，操作系统需要在文件系统中找到这个文件的 inode。在 Constance 中，一个目录也是一个文件，用 16 个字节的结构来表示，其中 2 个字节用于 inode 的节点号，剩下 14 个字节用于目录名。对路径的查找相对简单，例如要查找 /usr/a/b/ 目录，文件系统首先会在根目录中查找名为 usr 的目录，随后在 usr 目录下查找名为 a 的目录，以此类推。
Constance 目前还不支持将新的硬盘设备挂载到某一个目录下，但要实现功能也只需要设置目录对应的 inode 中的一个标志位。当文件系统发现目录有这个标志位的时候，系统会搜索内存中所有超级块，直到某个超级块挂载路径为当前目录的地址。

8.6 文件描述符
