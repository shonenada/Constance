进程调度
===================

在操作系统中，进程多于处理器的情况是非常常见的，为了保证系统吞吐量，系统不可能让处理器顺序地执行完每一个进程。这种情况，需要操作系统进行进程调度，由系统决定按照怎么样的顺序执行进程。

7.1 状态任务段

状态任务段（Task State Segment，TSS），使用来指定构成任务执行空间的各个段，并为任务状态信息提供存储空间。

7.2 进程创建

Constance 中除了第一个 init 进程，其余进程都是通过 fork 系统调用创建的。
fork 系统调用，会复制当前进程的地址空间和资源，生成一个子进程。与 unix 的 fork 调用一样，fork 在子进程中返回 0，而在父进程中返回子进程的进程号。
fork 执行过程大概如下：
1、在进程表中寻找一个未使用的进程，分配进程号 pid。
2、为子进程申请新的内存空间。
3、复制进程参数，如进程号，父进程号，组号等。
4、为子进程的页目录申请内存空间，并初始化子进程页目录。
5、复制父进程页目录到子进程。
6、复制父进程上下文和寄存器状态。
7、设置 eip 寄存器。

值得一提的是，在创建进程时，采用了写时复制机制，写时复制机制将在内存管理部分描述。

7.3 进程执行

7.4 进程同步

7.5 进程调度
